---
apiVersion: v1
kind: Secret
metadata:
  name: centos7
  namespace: system-upgrade
type: Opaque
stringData:
  upgrade.sh: |
    #!/bin/sh
    set -e
    # do actual upgrade
    setenforce 0
    yum upgrade -y --exclude docker-ce
    setenforce 1
    # needs-restarting returns 1 if reboot is needed
    if ! needs-restarting -r &> /dev/null; then
      needs-restarting -r || /bin/true  # otherwise script ends due to -e
      # magic to install docker after the reboot
      if [ -e /etc/rc.d/rc.local ]; then
        mv /etc/rc.d/rc.local /etc/rc.d/rc.local.orig
      fi
      cp /run/system-upgrade/secrets/centos7/rc.local /etc/rc.d/rc.local
      chmod 755 /etc/rc.d/rc.local
      reboot
    fi
  rc.local: |
    #!/bin/bash
    yum upgrade -y docker-ce
    if [ -e /etc/rc.d/rc.local.orig ]; then
      /etc/rc.d/rc.local.orig
      mv /etc/rc.d/rc.local.orig /etc/rc.d/rc.local
    else
      rm /etc/rc.d/rc.local
    fi  
---
apiVersion: upgrade.cattle.io/v1
kind: Plan
metadata:
  name: centos7-master
  namespace: system-upgrade
spec:
  concurrency: 1
  nodeSelector:
    matchExpressions:
      - {key: plan.upgrade.cattle.io/centos7, operator: Exists}
      - {key: node-role.kubernetes.io/master, operator: In, values: ["true"]}
    matchExpressions:
      - {key: plan.upgrade.cattle.io/centos7, operator: Exists}
      - {key: node-role.kubernetes.io/controlplane, operator: In, values: ["true"]}
  tolerations:
    - key: "node-role.kubernetes.io/controlplane"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "node-role.kubernetes.io/etcd"
      operator: "Exists"
      effect: "NoExecute"
  serviceAccountName: system-upgrade
  secrets:
    - name: centos7
      path: /host/run/system-upgrade/secrets/centos7
  drain:
    force: true
  version: centos7
  upgrade:
    image: centos
    command: ["chroot", "/host"]
    args: ["sh", "/run/system-upgrade/secrets/centos7/upgrade.sh"]
---
apiVersion: upgrade.cattle.io/v1
kind: Plan
metadata:
  name: centos7-worker
  namespace: system-upgrade
spec:
  concurrency: 2
  nodeSelector:
    matchExpressions:
      - {key: plan.upgrade.cattle.io/centos7, operator: Exists}
      - {key: node-role.kubernetes.io/master, operator: NotIn, values: ["true"]}
      - {key: node-role.kubernetes.io/controlplane, operator: NotIn, values: ["true"]}
  serviceAccountName: system-upgrade
  secrets:
    - name: centos7
      path: /host/run/system-upgrade/secrets/centos7
  drain:
    force: true
  version: centos7
  upgrade:
    image: centos
    command: ["chroot", "/host"]
    args: ["sh", "/run/system-upgrade/secrets/centos7/upgrade.sh"]
